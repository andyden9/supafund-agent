// Pearl Button Debugger - Single Line Version
// Copy this ENTIRE file and paste into browser console on localhost:3000

(function() { const q = window.queryClient?.getQueryCache().getAll() || []; console.log('üîç Pearl Button Debug Report'); console.log('='.repeat(60)); console.log(`Total queries: ${q.length}`); if (q.length === 0) { console.log('‚ùå NO QUERIES! Reasons:'); console.log('  1. Not logged in?'); console.log('  2. No service selected?'); console.log('  3. Offline mode?'); console.log(''); console.log('üîê localStorage keys:', Object.keys(localStorage)); return; } const bal = q.find(x => JSON.stringify(x.queryKey).includes('BALANCES')); const stak = q.filter(x => JSON.stringify(x.queryKey).includes('STAKING')); const fail = q.filter(x => x.state.status === 'error'); const load = q.filter(x => x.state.status === 'loading'); console.log(''); console.log('1Ô∏è‚É£ Balance Query:'); if (bal) { console.log(`  Status: ${bal.state.status}`); console.log(`  allow_start_agent: ${bal.state.data?.allow_start_agent}`); console.log(`  Data:`, bal.state.data); } else { console.log('  ‚ùå NOT FOUND'); } console.log(''); console.log('2Ô∏è‚É£ Staking Queries:', stak.length); stak.forEach((s, i) => { console.log(`  ${i+1}. ${s.state.status}`, s.state.error?.message || ''); }); console.log(''); console.log('3Ô∏è‚É£ Failed Queries:', fail.length); fail.forEach(f => { console.log(`  ‚ùå ${JSON.stringify(f.queryKey)}`); console.log(`     Error: ${f.state.error?.message}`); }); console.log(''); console.log('4Ô∏è‚É£ Loading Queries:', load.length); load.forEach(l => { console.log(`  ‚è≥ ${JSON.stringify(l.queryKey)}`); }); console.log(''); console.log('='.repeat(60)); console.log('üìä SUMMARY:'); console.log(`  Total: ${q.length} | Success: ${q.filter(x => x.state.status === 'success').length} | Error: ${fail.length} | Loading: ${load.length}`); console.log(''); if (!bal) { console.log('‚ùå ROOT CAUSE: Balance query not running'); console.log('   ‚Üí Check if logged in and service selected'); } else if (stak.length === 0) { console.log('‚ùå ROOT CAUSE: No staking queries'); console.log('   ‚Üí isAllStakingContractDetailsRecordLoaded = false'); console.log('   ‚Üí Button will be disabled'); } else if (bal.state.data?.allow_start_agent === false) { console.log('‚ùå ROOT CAUSE: Backend says cannot start'); console.log('   ‚Üí Check funding requirements'); } else if (bal.state.data?.allow_start_agent === true && stak.every(s => s.state.status === 'success')) { console.log('‚úÖ ALL CHECKS PASS! Button should work!'); console.log('   If still grayed: Hard refresh (Cmd+Shift+R)'); } else if (load.length > 0) { console.log('‚è≥ WAITING: Some queries still loading'); console.log('   ‚Üí Wait 5 seconds and check again'); } else { console.log('ü§î UNKNOWN: Check errors above'); } })();
